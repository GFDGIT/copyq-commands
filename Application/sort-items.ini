[Command]
Name=Sort
Command="
    copyq:
    // 单选条目时对整个标签页进行排序
    // 多选条目时对选中的条目进行排序

    var date_reverse = {
        [mimeText]: 'Latest First',
        [mimeIcon]: '',
        format: \"application/x-copyq-user-item-time\",
        reverse: true
    }

    var date = {
        [mimeText]: 'Oldest First',
        [mimeIcon]: '',
        format: \"application/x-copyq-user-item-time\",
        reverse: false
    }

    var pinned = {
        [mimeText]: 'Pinned to the top',
        [mimeIcon]: '',
        format: \"application/x-copyq-item-pinned\",
        reverse: false
    }

    var alphabet = {
        [mimeText]: 'Alphabetical',
        [mimeIcon]: '',
        format: mimeText,
        reverse: false
    }
    var alphabet_reverse = {
        [mimeText]: 'Alphabetical reverse',
        [mimeIcon]: '',
        format: mimeText,
        reverse: true
    }

    var size_reverse = {
        [mimeText]: 'Biggest First',
        [mimeIcon]: '',
        format: \"ItemSize\",
        reverse: true
    }

    var size = {
        [mimeText]: 'Smallest First',
        [mimeIcon]: '',
        format: \"ItemSize\",
        reverse: false
    }

    // 排序菜单项目
    var sorts = [
        date_reverse,
        date,
        pinned,
        alphabet,
        alphabet_reverse,
        size_reverse,
        size
    ]
    // 显示排序菜单
    var selectedIndex = menuItems(sorts)

    var sel = ItemSelection().current()
    if (sel.length <= 1) {
        // 当前标签页只一个条目，则退出
        length() <= 1 ? abort() : ''
        // 单选，将选区设置为整个标签页
        sel = ItemSelection().selectAll()
        handle_pinned(sel.length)
    } else {
        // 多选，判断是否从0开始选择。
        // 是：处理固定行；否：无操作
        sel.rows()[0] == 0 ? handle_pinned(sel.length) : ''
    }

    const rows = sel.rows()
    var order = ''
    if (selectedIndex != -1) {
        // 获取选择的排序条件
        const selectedFormat = sorts[selectedIndex].format
        switch (selectedFormat) {
            case 'ItemSize':
                popup('Sorting ⏳', '', rows.length * 3)
                order = sizeList()
                break;
            case \"application/x-copyq-item-pinned\":
                move_pinned_to(0)
                abort()
            default:
                order = sel.itemsFormat(selectedFormat)
        }
    } else {
        abort()
    }

    // 排序
    sel.sort(function (i, j) {
        if (sorts[selectedIndex].reverse) {
            return order[i] > order[j];
        } else {
            return order[i] < order[j];
        }
    });
    popup('排序完成✅', '', 1000)

    // 获取sel选区中每个条目的字节数
    function sizeList() {
        var items = sel.items()
        var sizes = []
        for (let row in rows) {
            var itemSize = 0
            var item = items[row]
            for (var format in item) {
                itemSize += read(format, row).size()
            }
            sizes.push(itemSize)
        }
        return sizes
    }

    // 移动所有固定行至row行
    function move_pinned_to(row) {
        var sel = ItemSelection().selectAll()
        var pinned = []
        for (var i = 0; i < sel.length; i++) {
            if (plugins.itempinned.isPinned(i))
                pinned.push(i)
        }
        if (pinned.length > 0) {
            sel.deselectIndexes(pinned)
            sel.invert().move(row)
            selectItems(row)
        }
    }

    // 处理固定行
    function handle_pinned(sel_length) {
        var pinned = []
        // 获取从0行开始连续的固定行
        for (var i = 0; i < sel_length; i++) {
            if (plugins.itempinned.isPinned(i)) {
                pinned.push(i)
            } else {
                break
            }
        }
        // 固定行向下移动1行
        if (0 < pinned.length < sel_length) {
            var selAll = ItemSelection().selectAll()
            selAll.deselectIndexes(pinned)
            selAll.invert().move(pinned.length + 1)
        }
    }"
InMenu=true
Icon=
Shortcut=shift+s